# Generated by Django 4.2.7 on 2025-08-05 12:20

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ConfigurationTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('category', models.CharField(choices=[('crm', 'CRM Integration'), ('meeting', 'Meeting Platform'), ('workflow', 'Workflow Automation'), ('notification', 'Notification System'), ('security', 'Security Configuration')], max_length=50)),
                ('version', models.CharField(default='1.0.0', max_length=20)),
                ('is_official', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('configuration_schema', models.JSONField(help_text='JSON schema for configuration validation')),
                ('default_configuration', models.JSONField(help_text='Default configuration values')),
                ('ui_schema', models.JSONField(help_text='UI schema for form generation')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('usage_count', models.PositiveIntegerField(default=0)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_templates', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('name', 'version')},
            },
        ),
        migrations.CreateModel(
            name='IntegrationConfiguration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('integration_type', models.CharField(choices=[('crm_salesforce', 'Salesforce CRM'), ('crm_hubspot', 'HubSpot CRM'), ('crm_pipedrive', 'Pipedrive CRM'), ('crm_creatio', 'Creatio CRM'), ('crm_sap_c4c', 'SAP C4C'), ('meeting_google', 'Google Meet'), ('meeting_teams', 'Microsoft Teams'), ('meeting_zoom', 'Zoom'), ('notification_email', 'Email Notifications'), ('notification_slack', 'Slack Notifications'), ('ai_gemini', 'Google Gemini AI'), ('ai_openai', 'OpenAI')], max_length=50)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('active', 'Active'), ('inactive', 'Inactive'), ('error', 'Error'), ('testing', 'Testing')], default='draft', max_length=20)),
                ('configuration', models.JSONField(help_text='Integration configuration data')),
                ('credentials', models.JSONField(default=dict, help_text='Encrypted credentials')),
                ('organization', models.CharField(blank=True, max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_tested', models.DateTimeField(blank=True, null=True)),
                ('last_sync', models.DateTimeField(blank=True, null=True)),
                ('health_status', models.CharField(default='unknown', max_length=20)),
                ('health_details', models.JSONField(default=dict)),
                ('error_count', models.PositiveIntegerField(default=0)),
                ('last_error', models.TextField(blank=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_integrations', to=settings.AUTH_USER_MODEL)),
                ('template', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='admin_config.configurationtemplate')),
            ],
            options={
                'ordering': ['-updated_at'],
                'unique_together': {('name', 'created_by')},
            },
        ),
        migrations.CreateModel(
            name='WorkflowConfiguration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('trigger_type', models.CharField(choices=[('manual', 'Manual Trigger'), ('schedule', 'Scheduled'), ('event', 'Event-based'), ('webhook', 'Webhook'), ('api_call', 'API Call')], max_length=20)),
                ('trigger_config', models.JSONField(help_text='Trigger configuration')),
                ('workflow_steps', models.JSONField(help_text='Workflow steps definition')),
                ('visual_config', models.JSONField(default=dict, help_text='Visual editor configuration')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('execution_count', models.PositiveIntegerField(default=0)),
                ('last_execution', models.DateTimeField(blank=True, null=True)),
                ('success_rate', models.FloatField(default=0.0)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('required_integrations', models.ManyToManyField(blank=True, to='admin_config.integrationconfiguration')),
            ],
            options={
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='ConfigurationTest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('test_type', models.CharField(choices=[('connection', 'Connection Test'), ('authentication', 'Authentication Test'), ('api_call', 'API Call Test'), ('workflow', 'Workflow Test'), ('integration', 'Integration Test')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('running', 'Running'), ('passed', 'Passed'), ('failed', 'Failed'), ('timeout', 'Timeout')], default='pending', max_length=20)),
                ('test_data', models.JSONField(help_text='Test input data')),
                ('expected_result', models.JSONField(help_text='Expected test result')),
                ('actual_result', models.JSONField(help_text='Actual test result')),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('duration_ms', models.PositiveIntegerField(blank=True, null=True)),
                ('success', models.BooleanField(default=False)),
                ('error_message', models.TextField(blank=True)),
                ('response_data', models.JSONField(default=dict)),
                ('configuration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tests', to='admin_config.integrationconfiguration')),
                ('triggered_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='ConfigurationBackup',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('backup_type', models.CharField(choices=[('manual', 'Manual Backup'), ('automatic', 'Automatic Backup'), ('pre_change', 'Pre-change Backup'), ('scheduled', 'Scheduled Backup')], max_length=20)),
                ('configurations', models.JSONField(help_text='Backed up configurations')),
                ('workflows', models.JSONField(help_text='Backed up workflows')),
                ('templates', models.JSONField(help_text='Backed up templates')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('file_size', models.PositiveIntegerField(default=0)),
                ('restored_count', models.PositiveIntegerField(default=0)),
                ('last_restored', models.DateTimeField(blank=True, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RolePermission',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('permission_type', models.CharField(choices=[('view', 'View'), ('create', 'Create'), ('edit', 'Edit'), ('delete', 'Delete'), ('test', 'Test'), ('backup', 'Backup'), ('restore', 'Restore'), ('export', 'Export'), ('import', 'Import')], max_length=20)),
                ('resource_type', models.CharField(choices=[('integration', 'Integration Configuration'), ('workflow', 'Workflow Configuration'), ('template', 'Configuration Template'), ('backup', 'Configuration Backup'), ('audit', 'Audit Logs')], max_length=20)),
                ('object_id', models.UUIDField(blank=True, null=True)),
                ('conditions', models.JSONField(default=dict, help_text='Additional permission conditions')),
                ('granted_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('granted_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='granted_permissions', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='config_permissions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'permission_type', 'resource_type', 'object_id')},
            },
        ),
        migrations.CreateModel(
            name='ConfigurationAuditLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('action', models.CharField(choices=[('create', 'Created'), ('update', 'Updated'), ('delete', 'Deleted'), ('test', 'Tested'), ('backup', 'Backed up'), ('restore', 'Restored'), ('export', 'Exported'), ('import', 'Imported'), ('activate', 'Activated'), ('deactivate', 'Deactivated')], max_length=20)),
                ('object_id', models.UUIDField()),
                ('changes', models.JSONField(help_text='Details of changes made')),
                ('old_values', models.JSONField(default=dict, help_text='Previous values')),
                ('new_values', models.JSONField(default=dict, help_text='New values')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('session_key', models.CharField(blank=True, max_length=40)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('success', models.BooleanField(default=True)),
                ('error_message', models.TextField(blank=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['content_type', 'object_id'], name='admin_confi_content_d7865e_idx'), models.Index(fields=['user', 'timestamp'], name='admin_confi_user_id_313f58_idx'), models.Index(fields=['action', 'timestamp'], name='admin_confi_action_365df1_idx')],
            },
        ),
    ]
